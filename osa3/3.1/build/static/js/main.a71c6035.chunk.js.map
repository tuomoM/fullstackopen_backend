{"version":3,"sources":["services/persons.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","id","delete","concat","newObject","post","put","Person","_ref","personId","personName","personTel","handleRemove","react_default","a","createElement","onClick","FilterForm","_ref2","filter","handleFilter","text","value","onChange","Notification","_ref3","statusMsg","type","className","Addform","_ref4","name","handleName","number","handleN","formHandler","onSubmit","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","setFilter","_useState7","_useState8","newTel","setTel","_useState9","_useState10","setStatusMsg","useEffect","personService","result","personsFiltered","p","toLowerCase","includes","App_Notification","App_FilterForm","event","target","App_Addform","preventDefault","undefined","find","setTimeout","catch","error","console","log","person","window","confirm","changedPerson","objectSpread","map","alert","App_Person","message","key","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a71c6035.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl,newObject)\n    return request.then(response=> response.data)\n}\nconst remove = (id) =>{\n   const request = axios.delete(`${baseUrl}/${id}`)\n   return request.then(response=> response.data)\n}\nconst update = (id, newObject) =>{\n    const request = axios.put(`${baseUrl}/${id}`,newObject)\n    return request.then(response => response.data)\n}\nexport default {getAll,remove,create,update}\n","import React, {useState, useEffect} from 'react';\nimport './App.css'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [filter, setFilter] = useState('')\n  const [newTel, setTel] = useState('')\n  const [statusMsg, setStatusMsg] = useState({text:`tekstiÃ¤`,type: ''})\n  useEffect(()=>{\n    personService.getAll()\n    .then(result=>{\n      setPersons(result)\n    })\n  },[])\n const handleNewPerson = (event) =>{\n   event.preventDefault()\n   \n   if(persons.find(p=>p.name===newName)===undefined){\n   const newPerson = {\n     //id : persons.length +1, //json file starts from 1, not 0\n     name: newName,\n     number: newTel\n   }\n   personService.create(newPerson).then(result=>{\n    setPersons(persons.concat(result))\n    setStatusMsg({text:`Added ${newName}`,type:'notification'})\n    setNewName('')\n    setTel('')\n    setTimeout(()=>{\n        setStatusMsg({text:'',type:''})\n    },5000)\n   }).catch(error=>{\n     console.log('error',error.response.data)\n     setStatusMsg({text: error.response.data.error, type: 'error'})\n     setTimeout(()=>{\n       setStatusMsg({text:'',type:''})\n     },5000)\n   })\n  \n  }else{\n     const person = persons.find(p=>p.name === newName)\n\n     if(person.number!== newTel){\n       if(window.confirm(`${person.name} is already added to phonebook, replace old number with new one?`)){\n       const changedPerson = {...person, number: newTel }\n       personService.update(changedPerson.id,changedPerson)\n       .then(result =>{\n         setPersons(persons.map(p=> p.id!==changedPerson.id ? p : result))\n       }).catch(error => {\n         setStatusMsg({text:`Information on ${changedPerson.name} has already been removed from server`,type: `error`})\n         setPersons(persons.filter(p=> p.id!==changedPerson.id))\n         setTel('')\n         setNewName('')\n         setTimeout(()=>{\n           setStatusMsg({text:``,type:``})\n         },3000)\n       })\n       }\n     } else{\n       window.alert(`${newName} is alredy on the list with same phone number`)\n     }\n  }\n }\n const personsFiltered = persons.filter(p => p.name.toLowerCase().includes(filter.toLowerCase()))\n\n\n const handleNameChange = (event)=>{\n   setNewName(event.target.value)\n }\nconst handleTelChange = (event) =>{\n  setTel(event.target.value)\n}\nconst handleFilter = (event) =>{\n  setFilter(event.target.value)\n}\nconst handleRemove=(id)=>{\n \n  const person = persons.find(p=>p.id===id)\n  if(window.confirm(`Delete ${person.name} ?`)){\n  \n    personService.remove(person.id).then(result =>{\n    \n      setPersons(persons.filter(p=> p.id!==id))\n    }).catch(error =>{\n      window.alert(error.message)\n    })\n  }\n}\n\nconst rows = () =>{\n return personsFiltered.map(p=> <Person personName={p.name} \n  personTel={p.number} personId = {p.id}\n  handleRemove = {()=>handleRemove(p.id)} key={p.id}/>)\n\n}\n  return (\n    <div>\n      <h2><u>Phonebook</u></h2>\n      <Notification statusMsg={statusMsg}/>\n      <FilterForm filter ={filter} handleFilter ={handleFilter} text='Filter shown with'/>\n      <h3>Add new</h3>\n      <Addform name ={newName} handleName={handleNameChange} \n                    number = {newTel} handleN ={handleTelChange}\n                    formHandler ={handleNewPerson}/>\n\n      <h3>Numbers</h3>\n      {rows()}\n    </div>\n  )\n\n}\n\nconst Person = ({personId, personName,personTel,handleRemove}) =>{\nreturn(\n \n  <p id={personId}>{personName} {personTel} <button onClick={handleRemove}>Delete</button></p>\n  \n)\n\n}\nconst FilterForm=({filter,handleFilter,text})=>{\n  return(\n    <form>\n      {text} <input value={filter} onChange ={handleFilter}/>\n    </form>\n  )\n\n}\nconst Notification = ({statusMsg})=>{\nif(statusMsg.type===''){\n  return null\n}else {\nreturn(\n  <div className={statusMsg.type}>\n     {statusMsg.text}\n  </div>\n)\n\n}\n\n\n}\n\n\nconst Addform = ({name,handleName,number,handleN,formHandler})=>{\nreturn(\n  <form  onSubmit={formHandler}>\n  <div>\n    name: <input value ={name} onChange ={handleName}/><br></br>\n    number: <input value={number} onChange={handleN}/>\n  </div>\n  <div>\n    <button type=\"submit\">add</button>\n  </div>\n  </form>\n)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}